<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>VSCode on TakoyakiSoft</title><link>https://takoyakisoft.com/en/tags/vscode/</link><description>Recent content in VSCode on TakoyakiSoft</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 22 Jun 2025 00:00:00 +0900</lastBuildDate><atom:link href="https://takoyakisoft.com/en/tags/vscode/index.xml" rel="self" type="application/rss+xml"/><item><title>A Modern Development Environment Template for Roblox (TypeScript) and VSCode</title><link>https://takoyakisoft.com/en/p/roblox-ts-template-for-modern-development/</link><pubDate>Sun, 22 Jun 2025 00:00:00 +0900</pubDate><guid>https://takoyakisoft.com/en/p/roblox-ts-template-for-modern-development/</guid><description>&lt;img src="https://takoyakisoft.com/p/roblox-ts-template-for-modern-development/roblox-ts-template-for-modern-development.webp" alt="Featured image of post A Modern Development Environment Template for Roblox (TypeScript) and VSCode" />&lt;h1 id="github-template">GitHub Template
&lt;/h1>&lt;p>&lt;a class="link" href="https://github.com/takoyakisoft/roblox-ts-rojo-template" target="_blank" rel="noopener"
>roblox-ts-rojo-template&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="README.md" >English&lt;/a> &lt;a class="link" href="README.ja.md" >日本語&lt;/a>&lt;/p>
&lt;h1 id="what-is-this">What is this?
&lt;/h1>&lt;p>This is a template for a modern development environment using VSCode for Roblox (TypeScript).&lt;/p>
&lt;ul>
&lt;li>VSCode 👉 Roblox Studio sync: &lt;a class="link" href="https://github.com/rojo-rbx/rojo" target="_blank" rel="noopener"
>Rojo&lt;/a>&lt;/li>
&lt;li>Linter: &lt;a class="link" href="https://github.com/eslint/eslint" target="_blank" rel="noopener"
>ESlint&lt;/a>&lt;/li>
&lt;li>Formatter: &lt;a class="link" href="https://github.com/prettier/prettier" target="_blank" rel="noopener"
>Prettier&lt;/a>&lt;/li>
&lt;li>Package Manager: &lt;a class="link" href="https://github.com/pnpm/pnpm" target="_blank" rel="noopener"
>pnpm&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote class="alert alert-caution">
&lt;p class="alert-heading">
❗
Caution
&lt;/p>
&lt;p>Functionality is unconfirmed, but popular packages have been included.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&amp;ldquo;@rbxts/janitor&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;@rbxts/profileservice&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;@rbxts/replicaservice&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;@rbxts/cmdr&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;@rbxts/testez&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;blockquote class="alert alert-note">
&lt;p class="alert-heading">
ℹ️
Note
&lt;/p>
&lt;p>Confirmed to work&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&amp;ldquo;@rbxts/react&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;@rbxts/react-roblox&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;blockquote class="alert alert-warning">
&lt;p class="alert-heading">
ℹ️
Warning
&lt;/p>
&lt;p>CI/CD is not included.&lt;/p>
&lt;/blockquote>
&lt;h1 id="installation">Installation
&lt;/h1>
&lt;blockquote class="alert alert-tip">
&lt;p class="alert-heading">
💡
Tip
&lt;/p>
&lt;p>You can use this via the &amp;ldquo;Use this template&amp;rdquo; button.&lt;/p>
&lt;/blockquote>
&lt;h2 id="install-packages">Install Packages
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pnpm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="install-vscode-extensions">Install VSCode Extensions
&lt;/h2>&lt;p>When you open this project, VSCode will recommend the following extensions. Please install them.&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=Roblox-TS.vscode-roblox-ts" target="_blank" rel="noopener"
>roblox-ts&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank" rel="noopener"
>ESLint&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank" rel="noopener"
>Prettier&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=evaera.vscode-rojo" target="_blank" rel="noopener"
>Rojo&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="usage">Usage
&lt;/h1>&lt;h2 id="from-vscode-to-rojo">From VSCode to Rojo
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pnpm run watch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>Ctrl + Shift + P&lt;/code>&lt;/p>
&lt;p>&lt;code>Rojo: Open Menu&lt;/code>&lt;/p>
&lt;blockquote class="alert alert-note">
&lt;p class="alert-heading">
ℹ️
Note
&lt;/p>
&lt;p>If this is your first time, launch Roblox Studio and install the Roblox Studio Plugin.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>▶ default.project.json&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/roblox-ts-template-for-modern-development/Code_m5RjRhSECe.webp"
width="1260"
height="860"
srcset="https://takoyakisoft.com/p/roblox-ts-template-for-modern-development/Code_m5RjRhSECe_hu_f5c6a58a949c0197.webp 480w, https://takoyakisoft.com/p/roblox-ts-template-for-modern-development/Code_m5RjRhSECe_hu_67808a5262379ac3.webp 1024w"
loading="lazy"
alt="How to start Rojo from VSCode"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="351px"
>&lt;/p>
&lt;h2 id="from-roblox-studio-to-rojo">From Roblox Studio to Rojo
&lt;/h2>&lt;p>&amp;ldquo;Plugins&amp;rdquo; tab&lt;/p>
&lt;p>&amp;ldquo;Rojo&amp;rdquo; ribbon&lt;/p>
&lt;p>&amp;ldquo;Connect&amp;rdquo; button&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/roblox-ts-template-for-modern-development/roblox-ts-template-for-modern-development.webp"
width="1342"
height="983"
srcset="https://takoyakisoft.com/p/roblox-ts-template-for-modern-development/roblox-ts-template-for-modern-development_hu_8ffd71bbf5e6b12f.webp 480w, https://takoyakisoft.com/p/roblox-ts-template-for-modern-development/roblox-ts-template-for-modern-development_hu_230b7f572a692276.webp 1024w"
loading="lazy"
alt="How to connect Rojo from Roblox Studio"
class="gallery-image"
data-flex-grow="136"
data-flex-basis="327px"
>&lt;/p></description></item><item><title>A Modern Development Environment Template for Roblox (Luau) and VSCode</title><link>https://takoyakisoft.com/en/p/roblox-luau-template-for-modern-development/</link><pubDate>Sat, 21 Jun 2025 00:00:00 +0900</pubDate><guid>https://takoyakisoft.com/en/p/roblox-luau-template-for-modern-development/</guid><description>&lt;img src="https://takoyakisoft.com/p/roblox-luau-template-for-modern-development/roblox-luau-template-for-modern-development.webp" alt="Featured image of post A Modern Development Environment Template for Roblox (Luau) and VSCode" />&lt;h1 id="github-template">GitHub Template
&lt;/h1>&lt;p>&lt;a class="link" href="https://github.com/takoyakisoft/roblox-rojo-wally-template" target="_blank" rel="noopener"
>roblox-rojo-wally-template&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="README.md" >English&lt;/a> &lt;a class="link" href="README.ja.md" >日本語&lt;/a>&lt;/p>
&lt;h1 id="what-is-this">What is this?
&lt;/h1>&lt;p>This is a template for a modern development environment for Roblox (Luau) using VSCode.&lt;/p>
&lt;ul>
&lt;li>VSCode 👉 Roblox Studio Sync: &lt;a class="link" href="https://github.com/rojo-rbx/rojo" target="_blank" rel="noopener"
>Rojo&lt;/a>&lt;/li>
&lt;li>Linter: &lt;a class="link" href="https://github.com/Kampfkarren/selene" target="_blank" rel="noopener"
>Selene&lt;/a>&lt;/li>
&lt;li>Formatter: &lt;a class="link" href="https://github.com/JohnnyMorganz/StyLua" target="_blank" rel="noopener"
>StyLua&lt;/a>&lt;/li>
&lt;li>Package Manager: &lt;a class="link" href="https://github.com/UpliftGames/wally" target="_blank" rel="noopener"
>Wally&lt;/a>&lt;/li>
&lt;li>Manager for Rojo and Wally: &lt;a class="link" href="https://github.com/rojo-rbx/rokit" target="_blank" rel="noopener"
>Rokit&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote class="alert alert-warning">
&lt;p class="alert-heading">
ℹ️
Warning
&lt;/p>
&lt;p>CI/CD is not included: &lt;a class="link" href="https://github.com/Roblox/place-ci-cd-demo" target="_blank" rel="noopener"
>CI/CD&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="installation">Installation
&lt;/h1>
&lt;blockquote class="alert alert-tip">
&lt;p class="alert-heading">
💡
Tip
&lt;/p>
&lt;p>You can use this via the &amp;ldquo;Use this template&amp;rdquo; button.&lt;/p>
&lt;/blockquote>
&lt;h2 id="installing-rokit">Installing Rokit
&lt;/h2>&lt;p>Windows (PowerShell)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Invoke-RestMethod&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">raw&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">githubusercontent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nb">rojo-rbx&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">rokit&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">scripts&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">install&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">ps1&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Invoke-Expression&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>macOS / Linux&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -fsSL https://raw.githubusercontent.com/rojo-rbx/rokit/main/scripts/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="installing-rojo-wally-etc">Installing Rojo, Wally, etc.
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rokit add rojo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rokit add wally
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rokit add wally-package-types
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="installing-packages">Installing Packages
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wally install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rojo sourcemap default.project.json --output sourcemap.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wally-package-types -s sourcemap.json Packages/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wally-package-types -s sourcemap.json ServerPackages/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wally-package-types -s sourcemap.json DevPackages/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="installing-vscode-extensions">Installing VSCode Extensions
&lt;/h2>&lt;p>When you open this project in VSCode, you will be prompted to install the following recommended extensions. Please install them.&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=evaera.vscode-rojo" target="_blank" rel="noopener"
>Rojo&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=JohnnyMorganz.luau-lsp" target="_blank" rel="noopener"
>Luau Language Server&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=Kampfkarren.selene-vscode" target="_blank" rel="noopener"
>Selene&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=JohnnyMorganz.stylua" target="_blank" rel="noopener"
>StyLua&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="usage">Usage
&lt;/h1>&lt;h2 id="rojo-from-vscode">Rojo from VSCode
&lt;/h2>&lt;p>Press &lt;code>Ctrl + Shift + P&lt;/code>&lt;/p>
&lt;p>Select &lt;code>Rojo: Open Menu&lt;/code>&lt;/p>
&lt;blockquote class="alert alert-note">
&lt;p class="alert-heading">
ℹ️
Note
&lt;/p>
&lt;p>If this is your first time, launch Roblox Studio and install the Roblox Studio Plugin.&lt;/p>
&lt;/blockquote>
&lt;p>Select &lt;code>▶ default.project.json&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/roblox-luau-template-for-modern-development/Code_m5RjRhSECe.webp"
width="1260"
height="860"
srcset="https://takoyakisoft.com/p/roblox-luau-template-for-modern-development/Code_m5RjRhSECe_hu_f5c6a58a949c0197.webp 480w, https://takoyakisoft.com/p/roblox-luau-template-for-modern-development/Code_m5RjRhSECe_hu_67808a5262379ac3.webp 1024w"
loading="lazy"
alt="How to start Rojo from VSCode"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="351px"
>&lt;/p>
&lt;h2 id="rojo-from-roblox-studio">Rojo from Roblox Studio
&lt;/h2>&lt;p>Go to the &amp;ldquo;Plugins&amp;rdquo; tab.&lt;/p>
&lt;p>In the &amp;ldquo;Rojo&amp;rdquo; ribbon, click the &amp;ldquo;Connect&amp;rdquo; button.&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/roblox-luau-template-for-modern-development/roblox-luau-template-for-modern-development.webp"
width="1342"
height="983"
srcset="https://takoyakisoft.com/p/roblox-luau-template-for-modern-development/roblox-luau-template-for-modern-development_hu_8ffd71bbf5e6b12f.webp 480w, https://takoyakisoft.com/p/roblox-luau-template-for-modern-development/roblox-luau-template-for-modern-development_hu_230b7f572a692276.webp 1024w"
loading="lazy"
alt="How to connect to Rojo from Roblox Studio"
class="gallery-image"
data-flex-grow="136"
data-flex-basis="327px"
>&lt;/p>
&lt;h2 id="adding-packages-with-wally">Adding Packages with Wally
&lt;/h2>&lt;p>Edit &lt;code>wally.toml&lt;/code> in VSCode.&lt;/p>
&lt;p>Find the package you want on &lt;a class="link" href="https://wally.run/" target="_blank" rel="noopener"
>wally.run&lt;/a> and copy its name from the &amp;ldquo;Install&amp;rdquo; section.&lt;/p>
&lt;p>The sections are categorized as follows:&lt;/p>
&lt;p>&lt;code>[dependencies]&lt;/code> is for both client and server.
&lt;code>[server-dependencies]&lt;/code> is for server-only.
&lt;code>[dev-dependencies]&lt;/code> is for development and testing only.&lt;/p>
&lt;p>Once you&amp;rsquo;ve finished editing, run the &lt;a class="link" href="#installing-packages" >package installation&lt;/a> steps again.&lt;/p>
&lt;h1 id="references">References
&lt;/h1>&lt;p>&lt;a class="link" href="https://www.youtube.com/watch?v=IJDg6tRJmHo" target="_blank" rel="noopener"
>How Big Studios Develop on Roblox&lt;/a>&lt;/p></description></item><item><title>A Practical Guide to Rovo Dev CLI: How to Use It Comfortably with VSCode and WSL2</title><link>https://takoyakisoft.com/en/p/rovo-dev-cli-guide-wsl2-blender/</link><pubDate>Thu, 19 Jun 2025 15:05:00 +0900</pubDate><guid>https://takoyakisoft.com/en/p/rovo-dev-cli-guide-wsl2-blender/</guid><description>&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/rovo-dev-cli-guide-wsl2-blender.webp" alt="Featured image of post A Practical Guide to Rovo Dev CLI: How to Use It Comfortably with VSCode and WSL2" />&lt;p>Hello there!&lt;/p>
&lt;p>By the way, I&amp;rsquo;m even using Rovo Dev CLI&amp;rsquo;s AI assistant feature to write this article. Pretty handy, right?&lt;/p>
&lt;p>Today, I&amp;rsquo;m going to walk you through Atlassian&amp;rsquo;s AI development agent, &amp;ldquo;Rovo Dev CLI.&amp;rdquo;&lt;/p>
&lt;p>It&amp;rsquo;s a tool similar to the popular &amp;ldquo;Claude Code.&amp;rdquo; You can use it in your terminal to chat with an AI, get help with coding, generate tests, ask for refactoring, and much more. And the best part? It&amp;rsquo;s currently free to use during its beta period.&lt;/p>
&lt;p>However, if you try to use it directly in Windows PowerShell, you&amp;rsquo;ll run into issues with garbled Japanese characters&amp;hellip;&lt;/p>
&lt;p>But don&amp;rsquo;t worry!
In this article, I&amp;rsquo;ll cover everything from the basic usage to a slick solution for that garbled text problem using &amp;ldquo;WSL2&amp;rdquo; and &amp;ldquo;VSCode.&amp;rdquo; We&amp;rsquo;ll even dive into an advanced &amp;ldquo;MCP integration&amp;rdquo; technique that lets you command an AI to perform 3D modeling. I&amp;rsquo;ll provide concrete steps for everything.&lt;/p>
&lt;h3 id="what-is-rovo-dev-cli">What is Rovo Dev CLI?
&lt;/h3>&lt;p>Rovo Dev CLI is a command-line AI assistant developed by Atlassian, the company famous for Jira and Confluence.&lt;/p>
&lt;p>When I asked Rovo Dev itself, &amp;ldquo;What model are you using?&amp;rdquo;, it told me it uses Anthropic&amp;rsquo;s Claude family.&lt;/p>
&lt;h3 id="for-windows-users-start-here-wsl2-setup">For Windows Users: Start Here! WSL2 Setup
&lt;/h3>&lt;p>If you&amp;rsquo;re using Rovo Dev CLI on Windows, I strongly recommend using WSL2 (Windows Subsystem for Linux 2).
As I mentioned earlier, this is because using it directly in PowerShell can lead to garbled Japanese text.&lt;/p>
&lt;h4 id="wsl2-installation-and-configuration">WSL2 Installation and Configuration
&lt;/h4>&lt;ol>
&lt;li>Install WSL2&lt;/li>
&lt;/ol>
&lt;p>Open &amp;ldquo;PowerShell&amp;rdquo; and run this command.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">wsl&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-install&lt;/span> &lt;span class="n">-d&lt;/span> &lt;span class="n">Ubuntu&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="mf">24.04&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In my environment, I had to restart my PC for WSL to start up correctly. If you run into trouble, give that a try.&lt;/p>
&lt;ol start="2">
&lt;li>WSL2 Initial Setup&lt;/li>
&lt;/ol>
&lt;p>Once the installation is complete, Ubuntu will launch. Set up your username and password.&lt;/p>
&lt;ol start="3">
&lt;li>Set Up Convenient Mirrored Networking Mode&lt;/li>
&lt;/ol>
&lt;p>By configuring WSL2&amp;rsquo;s new &amp;ldquo;mirrored&amp;rdquo; mode, the network is shared between Windows and WSL2, allowing you to access &lt;code>localhost&lt;/code> from either side.
This will be incredibly useful for the MCP integration I&amp;rsquo;ll explain later.&lt;/p>
&lt;p>Create a file named &lt;code>.wslconfig&lt;/code> in your Windows user folder (&lt;code>C:\Users\your-username&lt;/code>) and add the following content.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[wsl2]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">networkingMode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">mirrored&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can also do the same from the &amp;ldquo;WSL Settings&amp;rdquo; menu.&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/wslsettings_mirrored.webp"
width="1346"
height="853"
srcset="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/wslsettings_mirrored_hu_d9bde27503199c09.webp 480w, https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/wslsettings_mirrored_hu_e3a460c1274db487.webp 1024w"
loading="lazy"
alt="WSL Settings Mirrored"
class="gallery-image"
data-flex-grow="157"
data-flex-basis="378px"
>&lt;/p>
&lt;ol start="4">
&lt;li>Restart WSL2&lt;/li>
&lt;/ol>
&lt;p>To apply the settings, run this command in PowerShell.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">wsl&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-shutdown&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After that, start WSL2 (Ubuntu) again.&lt;/p>
&lt;p>Now your WSL2 environment is all set!
In the next step, we&amp;rsquo;ll connect to this WSL2 environment from VSCode to make things even more comfortable.&lt;/p>
&lt;h3 id="lets-connect-to-wsl2-from-vscode">Let&amp;rsquo;s Connect to WSL2 from VSCode
&lt;/h3>&lt;p>From here on out, we&amp;rsquo;ll be doing everything using the VSCode WSL extension.&lt;/p>
&lt;h4 id="vscode-wsl-extension-installation-and-connection-steps">VSCode WSL Extension Installation and Connection Steps
&lt;/h4>&lt;ol>
&lt;li>Install VSCode&lt;/li>
&lt;/ol>
&lt;p>If you haven&amp;rsquo;t already, download and install it from the &lt;a class="link" href="https://code.visualstudio.com/" target="_blank" rel="noopener"
>official website&lt;/a>.&lt;/p>
&lt;ol start="2">
&lt;li>Install the WSL Extension&lt;/li>
&lt;/ol>
&lt;p>Launch VSCode, go to the Extensions tab on the left (Ctrl+Shift+X), search for &amp;ldquo;WSL,&amp;rdquo; and install it.&lt;/p>
&lt;ol start="3">
&lt;li>Connect to WSL2&lt;/li>
&lt;/ol>
&lt;p>Click the green icon in the bottom-left corner of the VSCode window and select &amp;ldquo;Connect to WSL using Distro&amp;hellip;&amp;rdquo;.
&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_WBcZxHa7dq.webp"
width="1260"
height="860"
srcset="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_WBcZxHa7dq_hu_32d522f9ee87f2f0.webp 480w, https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_WBcZxHa7dq_hu_bc26e0a0fef78f01.webp 1024w"
loading="lazy"
alt="Connect to WSL using Distro…"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="351px"
>&lt;/p>
&lt;ol start="4">
&lt;li>Select Ubuntu-24.04&lt;/li>
&lt;/ol>
&lt;p>Choose the Ubuntu-24.04 distribution we just installed.&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_ZY48s5zfnI.webp"
width="1260"
height="860"
srcset="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_ZY48s5zfnI_hu_649fc219f7f3a0c2.webp 480w, https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_ZY48s5zfnI_hu_76245b7a39596d1e.webp 1024w"
loading="lazy"
alt="Ubuntu-24.04"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="351px"
>&lt;/p>
&lt;ol start="5">
&lt;li>Open the Terminal&lt;/li>
&lt;/ol>
&lt;p>Go to the VSCode menu and select &amp;ldquo;Terminal&amp;rdquo; -&amp;gt; &amp;ldquo;New Terminal,&amp;rdquo; or use the shortcut &lt;code>Ctrl+`&lt;/code> to open the terminal.
You can also open it as shown in the image.
&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_ITaou93KJA.webp"
width="1260"
height="860"
srcset="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_ITaou93KJA_hu_9a20e5f852c191f9.webp 480w, https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_ITaou93KJA_hu_e44f23638998901a.webp 1024w"
loading="lazy"
alt="Open bash terminal"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="351px"
>&lt;/p>
&lt;p>Now you&amp;rsquo;re ready to access WSL2&amp;rsquo;s Ubuntu from within VSCode!
Let&amp;rsquo;s perform all subsequent operations in this VSCode terminal.
Editing and creating files is also a breeze since you can use the VSCode editor.&lt;/p>
&lt;h3 id="installation-and-initial-setup">Installation and Initial Setup
&lt;/h3>&lt;ol>
&lt;li>Install ACLI (Atlassian CLI)&lt;/li>
&lt;/ol>
&lt;p>Rovo Dev is used via ACLI, Atlassian&amp;rsquo;s common tool. First, let&amp;rsquo;s install it on our WSL2 Ubuntu.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Install required packages&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install -y wget gnupg2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set up the APT repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create directory for the key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo mkdir -p -m &lt;span class="m">755&lt;/span> /etc/apt/keyrings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Download the public key and convert it to GPG format&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget -nv -O- https://acli.atlassian.com/gpg/public-key.asc &lt;span class="p">|&lt;/span> sudo gpg --dearmor -o /etc/apt/keyrings/acli-archive-keyring.gpg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set permissions for the key file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chmod go+r /etc/apt/keyrings/acli-archive-keyring.gpg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Add the repository information to APT&amp;#39;s configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;deb [arch=&lt;/span>&lt;span class="k">$(&lt;/span>dpkg --print-architecture&lt;span class="k">)&lt;/span>&lt;span class="s2"> signed-by=/etc/apt/keyrings/acli-archive-keyring.gpg] https://acli.atlassian.com/linux/deb stable main&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sudo tee /etc/apt/sources.list.d/acli.list &amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Install ACLI&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y acli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If you&amp;rsquo;re using a different OS, you can find instructions on the official &lt;a class="link" href="https://developer.atlassian.com/cloud/acli/guides/install-acli/" target="_blank" rel="noopener"
>Install and update&lt;/a> page.&lt;/p>
&lt;ol start="2">
&lt;li>Get an Atlassian API Token and Authenticate&lt;/li>
&lt;/ol>
&lt;p>Next, let&amp;rsquo;s get an API token to log in with your Atlassian account.&lt;/p>
&lt;ol>
&lt;li>Go to your &lt;a class="link" href="https://id.atlassian.com/manage-profile/security/api-tokens" target="_blank" rel="noopener"
>Atlassian ID profile&lt;/a>.&lt;/li>
&lt;li>Click &amp;ldquo;Create API token&amp;rdquo; and create a token with a descriptive name (e.g., &lt;code>rovo-dev-cli&lt;/code>).&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/chrome_0jJE2KADTx.webp"
width="1020"
height="831"
srcset="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/chrome_0jJE2KADTx_hu_5ae329d25921ff9a.webp 480w, https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/chrome_0jJE2KADTx_hu_b6800cc2d16130e5.webp 1024w"
loading="lazy"
alt="Manage API tokens screen"
class="gallery-image"
data-flex-grow="122"
data-flex-basis="294px"
>&lt;/p>
&lt;ol start="3">
&lt;li>The generated token is only displayed once, so be sure to copy and save it somewhere safe!&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/chrome_Nb3KGfQ2yp.webp"
width="1020"
height="831"
srcset="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/chrome_Nb3KGfQ2yp_hu_4f397613aae13f7a.webp 480w, https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/chrome_Nb3KGfQ2yp_hu_e4edfcd1e5c3dea.webp 1024w"
loading="lazy"
alt="Create API token"
class="gallery-image"
data-flex-grow="122"
data-flex-basis="294px"
>&lt;/p>
&lt;p>Once you have the token, run this command in the terminal to authenticate.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">acli rovodev auth login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Enter your email address and paste the API token you just copied to complete the authentication.&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_d3pJFXWTQN.webp"
width="1260"
height="860"
srcset="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_d3pJFXWTQN_hu_d460bb5fecbfdf8a.webp 480w, https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/Code_d3pJFXWTQN_hu_fe12b8998d5cfe4e.webp 1024w"
loading="lazy"
alt="acli rovodev auth login"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="351px"
>&lt;/p>
&lt;ol start="3">
&lt;li>Launch!&lt;/li>
&lt;/ol>
&lt;p>Alright, it&amp;rsquo;s finally time to start the AI agent.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">acli rovodev run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Running this will switch your terminal to an interactive chat mode with the AI. How exciting!&lt;/p>
&lt;h3 id="good-to-know-basic-usage">Good to Know! Basic Usage
&lt;/h3>&lt;p>Rovo Dev CLI is packed with features that will make your development work much easier.&lt;/p>
&lt;h4 id="custom-prompts-custom-instructions">Custom Prompts (Custom Instructions)
&lt;/h4>&lt;p>Repeating the same requests every time can be a bit tedious. That&amp;rsquo;s where custom prompts come in handy. You can give the AI background knowledge in advance, similar to the &lt;code>CLAUDE.md&lt;/code> file in the Claude desktop app.&lt;/p>
&lt;p>There are three ways to set this up:&lt;/p>
&lt;ol>
&lt;li>Global Config File
Write your instructions in &lt;code>~/.rovodev/config.yml&lt;/code>. These are system-wide instructions.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">additionalSystemPrompt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> You are an expert in Python and TypeScript.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> When writing code, always include tests.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> Provide explanations concisely and in English.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>Global Agent File
Write instructions for the AI to read in a file called &lt;code>~/.rovodev/.agent.md&lt;/code>. Since it&amp;rsquo;s Markdown, you can be more detailed.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">&lt;span class="gh"># Developer Guidelines
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">## Coding Style
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>&lt;span class="k">-&lt;/span> Use 2 spaces for indentation.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Function names should be in camelCase.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Class names should be in PascalCase.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">## Testing Policy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>&lt;span class="k">-&lt;/span> Unit tests are mandatory.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Use mocks to speed up tests.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>Project-Specific Instructions
Create an &lt;code>.agent.md&lt;/code> file in the root of your current repository. This is useful for writing rules to be shared with your team. For personal settings, I recommend using &lt;code>.agent.local.md&lt;/code>, which you can exclude from Git version control.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">&lt;span class="gh"># Project-Specific Guidelines
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">This project is a web application using Next.js and TypeScript.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">## Architecture
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>&lt;span class="k">-&lt;/span> pages/ - Page components for routing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> components/ - Reusable UI components
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> lib/ - Utility functions and helpers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> styles/ - CSS modules and global styles
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">## Development Rules
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>&lt;span class="k">-&lt;/span> Create components as functional components.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Use React Hooks for state management.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Use SWR for API requests.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can combine all these settings, and the AI will consider all instructions when responding. Writing effective custom instructions will help you get higher-quality answers from the AI.&lt;/p>
&lt;h4 id="example-commands">Example Commands
&lt;/h4>&lt;p>In interactive mode, you can make requests like these:&lt;/p>
&lt;ul>
&lt;li>&lt;code>summarize this file ./path/to/file.js&lt;/code>: Summarize this file!&lt;/li>
&lt;li>&lt;code>add unit tests for UserService&lt;/code>: Write unit tests for UserService!&lt;/li>
&lt;li>&lt;code>Refactor this complex function to be more readable&lt;/code>: Rewrite this complex function to be more readable!&lt;/li>
&lt;/ul>
&lt;p>The AI understands your directory structure, so it can grasp the context just by being given a file path, which is pretty smart.&lt;/p>
&lt;h4 id="list-of-useful-interactive-mode-commands">List of Useful Interactive Mode Commands
&lt;/h4>&lt;p>Interactive mode has many other useful commands to make your interactions with the AI even smoother. If you want to know more about a specific command, just type &lt;code>/command-name help&lt;/code> in interactive mode.&lt;/p>
&lt;h4 id="session-management-sessions">Session Management: &lt;code>/sessions&lt;/code>
&lt;/h4>&lt;p>This command manages your sessions. It&amp;rsquo;s incredibly useful because it allows you to separate conversation histories and contexts.&lt;/p>
&lt;ul>
&lt;li>Key Features:
&lt;ul>
&lt;li>Session Management: Create and switch between multiple conversation sessions.&lt;/li>
&lt;li>Context Persistence: Each session remembers its own conversation history.&lt;/li>
&lt;li>Workspace Isolation: You can separate sessions by project.&lt;/li>
&lt;li>Session Forking: You can even branch off from the current conversation to create a new session.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>When you restart Rovo Dev CLI with the &lt;code>--restore&lt;/code> option, it will automatically restore your previous session.&lt;/p>
&lt;h4 id="clear-session-clear">Clear Session: &lt;code>/clear&lt;/code>
&lt;/h4>&lt;p>This command erases the entire conversation history of the current session, resetting it to a blank slate. Be careful, as this action cannot be undone. If you want to keep the history, use the &lt;code>/sessions&lt;/code> command to create a new session or the &lt;code>/prune&lt;/code> command, which I&amp;rsquo;ll introduce next.&lt;/p>
&lt;h4 id="optimize-session-prune">Optimize Session: &lt;code>/prune&lt;/code>
&lt;/h4>&lt;p>Use this when your conversation starts getting long. It&amp;rsquo;s a smart command that saves tokens by trimming the history while keeping the important parts. It removes things like the results of tools (programs) executed by the AI to slim down the history.&lt;/p>
&lt;h4 id="pre-defined-instruction-templates-instructions">Pre-defined Instruction Templates: &lt;code>/instructions&lt;/code>
&lt;/h4>&lt;p>This allows you to run pre-defined instruction templates for common tasks like code reviews or documentation writing.&lt;/p>
&lt;ul>
&lt;li>Built-in Instruction Templates:
&lt;ul>
&lt;li>Code review and analysis&lt;/li>
&lt;li>Documentation generation and improvement&lt;/li>
&lt;li>Unit test creation and coverage improvement&lt;/li>
&lt;li>Confluence page summarization&lt;/li>
&lt;li>Jira issue analysis&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>You can also create your own custom templates!&lt;/p>
&lt;ol>
&lt;li>Create an &lt;code>instructions.yml&lt;/code> file in &lt;code>.rovodev/&lt;/code>.&lt;/li>
&lt;li>Create a Markdown file with the instruction content inside the &lt;code>.rovodev&lt;/code> folder.&lt;/li>
&lt;/ol>
&lt;p>To use them, just type &lt;code>/instructions&lt;/code> to see a list of templates.&lt;/p>
&lt;h4 id="memory-management-memory">Memory Management: &lt;code>/memory&lt;/code>
&lt;/h4>&lt;p>This feature lets you have Rovo Dev CLI remember important information about your projects and settings.&lt;/p>
&lt;ul>
&lt;li>Types of Memory:
&lt;ul>
&lt;li>Project Memory: Saved in the current directory (&lt;code>.agent.md&lt;/code> and &lt;code>.agent.local.md&lt;/code>).&lt;/li>
&lt;li>User Memory: Saved globally in your home directory (&lt;code>~/.rovodev/agent.md&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Memory files are in Markdown format, and they&amp;rsquo;re useful for writing down project rules, coding conventions, and so on.
You can quickly add a note by typing something like &lt;code># Here's something to remember&lt;/code>.&lt;/p>
&lt;h4 id="feedback-feedback">Feedback: &lt;code>/feedback&lt;/code>
&lt;/h4>&lt;p>A command for sending feedback or bug reports about Rovo Dev CLI.&lt;/p>
&lt;h4 id="usage-usage">Usage: &lt;code>/usage&lt;/code>
&lt;/h4>&lt;p>Check your LLM token usage for the day. Make sure you&amp;rsquo;re not overdoing it!&lt;/p>
&lt;h4 id="exit-exit">Exit: &lt;code>/exit&lt;/code>
&lt;/h4>&lt;p>Exits the application. &lt;code>/quit&lt;/code> or &lt;code>/q&lt;/code> also work.&lt;/p>
&lt;h3 id="advanced-integration-between-wsl2-and-windows">[Advanced] Integration Between WSL2 and Windows
&lt;/h3>&lt;p>Thanks to the VSCode WSL extension, file sharing and application integration between WSL2 and Windows become incredibly smooth.&lt;/p>
&lt;h4 id="utilizing-mirrored-networking-mode">Utilizing Mirrored Networking Mode
&lt;/h4>&lt;p>The WSL2 mirrored networking mode we set up earlier really shines here.&lt;/p>
&lt;ol>
&lt;li>Port Sharing: You can directly access a server running in WSL2 (e.g., &lt;code>localhost:3000&lt;/code>) from a browser on Windows.&lt;/li>
&lt;li>Shared Network Services: You can use services on the same network from both Windows and WSL2.&lt;/li>
&lt;li>Integration with MCP Server: This feature is especially crucial for the MCP integration we&amp;rsquo;ll discuss next. It allows Rovo Dev CLI in WSL2 to seamlessly connect to the Blender MCP server running on Windows.&lt;/li>
&lt;/ol>
&lt;p>This integration lets you get the best of both worlds: the user-friendly interface of Windows and the powerful command line of Linux.&lt;/p>
&lt;h3 id="advanced-lets-make-ai-control-blender-with-mcp">[Advanced] Let&amp;rsquo;s Make AI Control Blender with MCP!
&lt;/h3>&lt;p>Time for the grand finale! Let&amp;rsquo;s use Rovo Dev&amp;rsquo;s powerful MCP (Model Context Protocol) feature to control Blender on Windows from WSL2. We&amp;rsquo;ll be using a handy open-source tool called &lt;a class="link" href="https://github.com/ahujasid/blender-mcp" target="_blank" rel="noopener"
>BlenderMCP&lt;/a>.&lt;/p>
&lt;h4 id="what-is-blendermcp">What is BlenderMCP?
&lt;/h4>&lt;p>BlenderMCP is a tool that connects AI with Blender. With it, the AI can directly control Blender to perform 3D modeling, create scenes, manipulate objects, and more!&lt;/p>
&lt;p>Key Features:&lt;/p>
&lt;ul>
&lt;li>Bidirectional Communication: Connects AI and Blender.&lt;/li>
&lt;li>Object Manipulation: Create, move, and delete objects.&lt;/li>
&lt;li>Material Control: Apply colors and set textures.&lt;/li>
&lt;li>Scene Inspection: The AI can check the current state of the Blender scene.&lt;/li>
&lt;li>Code Execution: The AI can send and execute Python code in Blender.&lt;/li>
&lt;/ul>
&lt;h4 id="setup-steps">Setup Steps
&lt;/h4>&lt;p>BlenderMCP consists of two parts:&lt;/p>
&lt;ol>
&lt;li>Windows Side: Blender Add-on (&lt;code>addon.py&lt;/code>): Installed in Blender on Windows.&lt;/li>
&lt;li>WSL2 Side: MCP Server: Installed on WSL2&amp;rsquo;s Ubuntu and used by Rovo Dev CLI.&lt;/li>
&lt;/ol>
&lt;p>Let&amp;rsquo;s get it set up!&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Windows Side: Install the Blender Add-on&lt;/p>
&lt;ul>
&lt;li>Download &lt;code>addon.py&lt;/code> from the &lt;a class="link" href="https://github.com/ahujasid/blender-mcp" target="_blank" rel="noopener"
>BlenderMCP GitHub repository&lt;/a>.&lt;/li>
&lt;li>Open Blender, go to &amp;ldquo;Edit&amp;rdquo; &amp;gt; &amp;ldquo;Preferences&amp;rdquo; &amp;gt; &amp;ldquo;Add-ons.&amp;rdquo;&lt;/li>
&lt;li>Click &amp;ldquo;Install&amp;hellip;&amp;rdquo; and select the &lt;code>addon.py&lt;/code> file you downloaded.&lt;/li>
&lt;li>Enable the add-on by checking the box next to &amp;ldquo;Blender MCP.&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/blender_XHT4DlH7dm.webp"
width="722"
height="612"
srcset="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/blender_XHT4DlH7dm_hu_1e1089fa1e9d5605.webp 480w, https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/blender_XHT4DlH7dm_hu_6b98af69362a6108.webp 1024w"
loading="lazy"
alt="Blender add-on installation screen"
class="gallery-image"
data-flex-grow="117"
data-flex-basis="283px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>WSL2 Side: Install the uv Package Manager&lt;/p>
&lt;ul>
&lt;li>In your WSL2 Ubuntu terminal, run this command:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Install the uv package manager&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -LsSf https://astral.sh/uv/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>WSL2 Side: Configure Rovo Dev CLI&lt;/p>
&lt;ul>
&lt;li>Let&amp;rsquo;s use VSCode to edit the configuration file:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">EDITOR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;code&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">acli rovodev mcp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>This will open the configuration file in VSCode. Add the following content. This setting tells Rovo Dev CLI to automatically start BlenderMCP when it launches.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mcpServers&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;blender&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;command&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;uvx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;args&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;blender-mcp&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Windows Side: Configure Connection in Blender&lt;/p>
&lt;ul>
&lt;li>In Blender, open the 3D View&amp;rsquo;s sidebar (press the N key if it&amp;rsquo;s not visible).&lt;/li>
&lt;li>Find the &amp;ldquo;BlenderMCP&amp;rdquo; tab and click &amp;ldquo;Connect to MCP server.&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/blender_kgZFzsrLFE.webp"
width="1128"
height="772"
srcset="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/blender_kgZFzsrLFE_hu_dbe03a72ecde385f.webp 480w, https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/blender_kgZFzsrLFE_hu_cfe479678a85ae3b.webp 1024w"
loading="lazy"
alt="Connect to BlenderMCP server"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="350px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>WSL2 Side: Control Blender with Rovo Dev CLI!&lt;/p>
&lt;ul>
&lt;li>In your VSCode integrated terminal on WSL2, run &lt;code>acli rovodev run&lt;/code>.&lt;/li>
&lt;li>Try asking the AI something like this:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Using Blender, please create a cat.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And what happens? A cube should appear in your Blender window (running on Windows) and then move upwards, all based on the command from WSL2. This is the power of the mirrored networking we set up earlier. WSL2 recognizes Blender running on Windows as a server on &lt;code>localhost&lt;/code>, enabling seamless integration. Amazing!&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/blender_mcp_cat.webp"
width="1200"
height="900"
srcset="https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/blender_mcp_cat_hu_adefcca0e568179.webp 480w, https://takoyakisoft.com/p/rovo-dev-cli-guide-wsl2-blender/blender_mcp_cat_hu_6a420429aded544a.webp 1024w"
loading="lazy"
alt="3D model of a cat"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="mcp-troubleshooting">MCP Troubleshooting
&lt;/h4>&lt;p>If things aren&amp;rsquo;t working, check these points:&lt;/p>
&lt;ol>
&lt;li>Connection Issues: Is the Blender add-on enabled? Did you click &amp;ldquo;Connect to MCP server&amp;rdquo; in Blender&amp;rsquo;s MCP tab?&lt;/li>
&lt;li>WSL2 Mirrored Networking: Double-check that mirrored mode is properly enabled.&lt;/li>
&lt;li>Try a Restart: If connection errors persist, restarting both Rovo Dev CLI and Blender might be the quickest fix.&lt;/li>
&lt;li>Command Execution: Do not run the &lt;code>uvx blender-mcp&lt;/code> command directly. Rovo Dev CLI runs it automatically based on the configuration file.&lt;/li>
&lt;/ol>
&lt;p>The most crucial thing is that the network connection between WSL2 and Windows is correctly set up with mirrored mode.&lt;/p>
&lt;h3 id="summary">Summary
&lt;/h3>&lt;p>In this article, we covered a wide range of topics, from the basics of Atlassian&amp;rsquo;s new AI development tool, &amp;ldquo;Rovo Dev CLI,&amp;rdquo; to tips for Windows users to use it comfortably with WSL2, and even an advanced Blender integration using MCP.&lt;/p>
&lt;p>The initial setup might seem a bit involved, but once your environment is configured, the development experience of receiving powerful AI support without ever leaving your terminal is truly revolutionary.&lt;/p>
&lt;p>Rovo Dev CLI is still in beta, so I&amp;rsquo;m excited to see how it will continue to evolve.
I hope this article helps you discover a new style of development.&lt;/p>
&lt;p>Give this futuristic tool a try. Happy coding! 🎉&lt;/p></description></item><item><title>Registering for xAI (Grok API) and Using It with VSCode Extensions (Cody, Cline, Roo Code)</title><link>https://takoyakisoft.com/en/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/</link><pubDate>Thu, 20 Feb 2025 00:00:00 +0900</pubDate><guid>https://takoyakisoft.com/en/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/</guid><description>&lt;img src="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_payment.webp" alt="Featured image of post Registering for xAI (Grok API) and Using It with VSCode Extensions (Cody, Cline, Roo Code)" />&lt;h2 id="how-to-pay-5-to-xai-and-get-150-in-credits-every-month">How to Pay $5 to xAI and Get $150 in Credits Every Month
&lt;/h2>&lt;p>I registered for xAI by following the steps outlined in this article:&lt;/p>
&lt;p>&lt;a class="link" href="https://zenn.dev/schroneko/articles/de3a8f574e9ea4" target="_blank" rel="noopener"
>Grok API: Pay $5 and Get $150 Worth of Usage?&lt;/a>&lt;/p>
&lt;p>Start by visiting the &lt;a class="link" href="https://console.x.ai/" target="_blank" rel="noopener"
>xAI Cloud Console&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_payment.webp"
width="2068"
height="1100"
srcset="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_payment_hu_81143d937529a41c.webp 480w, https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_payment_hu_9f2016a5d97f89ce.webp 1024w"
loading="lazy"
alt="xAI Payment"
class="gallery-image"
data-flex-grow="188"
data-flex-basis="451px"
>&lt;/p>
&lt;p>Click in the order of 1 and 2 as shown in the image to enter your &amp;ldquo;Billing address.&amp;rdquo;&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_billing_address.webp"
width="533"
height="846"
srcset="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_billing_address_hu_2856e0dd944eac5e.webp 480w, https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_billing_address_hu_40c0645fa7caed74.webp 1024w"
loading="lazy"
alt="xAI Billing Address"
class="gallery-image"
data-flex-grow="63"
data-flex-basis="151px"
>&lt;/p>
&lt;p>The image is just an example; I filled it out in English. It should match the address associated with your credit card.&lt;br>
I left the &amp;ldquo;Tax ID Type&amp;rdquo; and &amp;ldquo;Tax Number&amp;rdquo; fields blank since they’re optional. I’m not entirely sure about the tax implications here.&lt;/p>
&lt;p>Next, enter your &amp;ldquo;Payment methods.&amp;rdquo;&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_payment_methods.webp"
width="584"
height="744"
srcset="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_payment_methods_hu_8713fae58fdd8b00.webp 480w, https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_payment_methods_hu_38144f9d12ffc987.webp 1024w"
loading="lazy"
alt="xAI Payment methods"
class="gallery-image"
data-flex-grow="78"
data-flex-basis="188px"
>&lt;/p>
&lt;p>I used a PayPay JCB card, and it worked fine. (Note: PayPay is a payment service popular in Japan, but any valid credit card should work.)&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_credits.webp"
width="1956"
height="997"
srcset="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_credits_hu_c065380063d48a6e.webp 480w, https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_credits_hu_32da91709b2bc06d.webp 1024w"
loading="lazy"
alt="xAI Credits"
class="gallery-image"
data-flex-grow="196"
data-flex-basis="470px"
>&lt;/p>
&lt;p>There’s a field labeled &amp;ldquo;Redeem Promo code,&amp;rdquo; but as of February 20, I couldn’t find any promo codes even after searching with xAI’s DeepResearch tool. It seems there aren’t any available right now.&lt;br>
To buy credits, click &amp;ldquo;Purchase credits.&amp;rdquo;&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_purchase_credits.webp"
width="542"
height="402"
srcset="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_purchase_credits_hu_415c0f11140c9841.webp 480w, https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/xai_purchase_credits_hu_1a56e4bb6c2f46e8.webp 1024w"
loading="lazy"
alt="xAI Purchase Credits"
class="gallery-image"
data-flex-grow="134"
data-flex-basis="323px"
>&lt;/p>
&lt;p>A $5 purchase is sufficient. After paying $5, a &amp;ldquo;Share Data&amp;rdquo; button will appear (I forgot to capture a screenshot of this).&lt;br>
As explained in this article, by agreeing to share data with xAI, you can receive $150 in credits every month:&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.x.ai/docs/data-sharing" target="_blank" rel="noopener"
>Get $150 in free API credits each month&lt;/a>&lt;/p>
&lt;h2 id="how-to-use-xai-with-vscode-extensions">How to Use xAI with VSCode Extensions
&lt;/h2>&lt;h3 id="using-grok-api-with-cody">Using Grok API with Cody
&lt;/h3>&lt;p>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=sourcegraph.cody-ai" target="_blank" rel="noopener"
>Cody: AI Code Assistant&lt;/a> is an AI-powered extension that offers code completion, editing, and chat features.&lt;br>
Code completion is always free, but code editing and chat come with usage limits. By integrating the Grok API for editing and chat, you can unlock an unrestricted AI coding experience for just $5.&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/vscode_settings.webp"
width="1918"
height="942"
srcset="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/vscode_settings_hu_d77133841b6c13c3.webp 480w, https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/vscode_settings_hu_8d42a7283d7622de.webp 1024w"
loading="lazy"
alt="VSCode settings.json"
class="gallery-image"
data-flex-grow="203"
data-flex-basis="488px"
>&lt;/p>
&lt;p>As shown in the image, navigate to &amp;ldquo;File&amp;rdquo; → &amp;ldquo;Preferences&amp;rdquo; → &amp;ldquo;Settings,&amp;rdquo; then click the icon in the top-right corner to open &amp;ldquo;settings.json.&amp;rdquo;&lt;br>
Alternatively, press &amp;ldquo;Ctrl&amp;rdquo; + &amp;ldquo;Shift&amp;rdquo; + P and select &amp;ldquo;Preferences: Open Settings (JSON).&amp;rdquo;&lt;/p>
&lt;p>Here&amp;rsquo;s how to set up the models you want to add inside &lt;code>&amp;quot;cody.dev.models&amp;quot;&lt;/code>. Since Grok is an OpenAI-compatible API, specify &lt;code>&amp;quot;openai&amp;quot;&lt;/code> as the provider.&lt;br>
Additionally, I&amp;rsquo;ve set up the DeepSeek and Gemini APIs as well. DeepSeek is also an affordable API that you can use.&lt;br>
Gemini is an API provided by Google and is free to use. (Since there are restrictions on continuous usage, I&amp;rsquo;m using multiple instances.)&lt;br>
For &lt;code>&amp;quot;inputTokens&amp;quot;&lt;/code>, &lt;code>&amp;quot;temperature&amp;quot;&lt;/code>, and &lt;code>&amp;quot;stream&amp;quot;&lt;/code>, I&amp;rsquo;m using the official examples as they are.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cody.dev.models&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;provider&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;openai&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;model&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;grok-2-latest&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;inputTokens&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">131072&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;outputTokens&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8192&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiKey&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;xai-xxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;options&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;temperature&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;stream&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiEndpoint&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;https://api.x.ai/v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;provider&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;groq&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;model&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;deepseek-chat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;inputTokens&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">128000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;outputTokens&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8192&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiKey&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;sk-xxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;options&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;temperature&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiEndpoint&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;https://api.deepseek.com/chat/completions&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;provider&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;google&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;model&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;gemini-2.0-pro-exp-02-05&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;inputTokens&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2097152&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;outputTokens&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8192&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiKey&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;AIxxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;options&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;temperature&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">1.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;provider&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;google&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;model&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;gemini-2.0-flash-exp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;inputTokens&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1048576&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;outputTokens&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8192&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;apiKey&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;AIxxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;options&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;temperature&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">1.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cody.edit.preInstruction&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Please think thoughts in English. Output should be in English.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cody.chat.preInstruction&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Please think thoughts in English. Output should be in English.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>For code editing (&lt;code>&amp;quot;cody.edit.preInstruction&amp;quot;&lt;/code>) and chat (&lt;code>&amp;quot;cody.chat.preInstruction&amp;quot;&lt;/code>), you can set custom prompts, similar to those used in ChatGPT.&lt;/p>
&lt;h3 id="using-grok-api-with-cline">Using Grok API with Cline
&lt;/h3>&lt;p>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev" target="_blank" rel="noopener"
>Cline&lt;/a> seems to be an AI agent. It can read and write files, create new ones, and execute commands. Since it interacts with the API multiple times, it tends to consume a lot of tokens.&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/vscode_cline.webp"
width="590"
height="922"
srcset="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/vscode_cline_hu_5cb5e81943d4dbd4.webp 480w, https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/vscode_cline_hu_bf8b46ac4152fc99.webp 1024w"
loading="lazy"
alt="VSCode Cline"
class="gallery-image"
data-flex-grow="63"
data-flex-basis="153px"
>&lt;/p>
&lt;p>Cline can be configured using the &amp;ldquo;OpenAI Compatible&amp;rdquo; option, as shown in the image. Once you’ve completed the setup, click &amp;ldquo;Done&amp;rdquo; to save your settings.&lt;/p>
&lt;h3 id="using-grok-api-with-roo-code">Using Grok API with Roo Code
&lt;/h3>&lt;p>&lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline" target="_blank" rel="noopener"
>Roo Code (prev. Roo Cline)&lt;/a> is a fork of Cline, offering faster updates and more features.&lt;/p>
&lt;p>&lt;img src="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/vscode_roo_code.webp"
width="592"
height="929"
srcset="https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/vscode_roo_code_hu_75c742f6a01439a.webp 480w, https://takoyakisoft.com/p/registering-xai-grok-api-and-using-it-with-vscode-extensions-cody-cline-roo-code/vscode_roo_code_hu_f8e5b1048fd0ee98.webp 1024w"
loading="lazy"
alt="VSCode Roo Code"
class="gallery-image"
data-flex-grow="63"
data-flex-basis="152px"
>&lt;/p>
&lt;p>Roo Code can also be set up using the &amp;ldquo;OpenAI Compatible&amp;rdquo; option, as shown in the image. After finishing the configuration, click &amp;ldquo;Done&amp;rdquo; to save.&lt;/p></description></item></channel></rss>